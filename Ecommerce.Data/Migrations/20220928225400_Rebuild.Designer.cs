// <auto-generated />
using System;
using Ecommerce.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(EcomDbContext))]
    [Migration("20220928225400_Rebuild")]
    partial class Rebuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ecommerce.Data.Models.Bill", b =>
                {
                    b.Property<int>("ID_Bill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Bill"), 1L, 1);

                    b.Property<int?>("BillID_Bill")
                        .HasColumnType("int");

                    b.Property<int?>("ClientID_Client")
                        .HasColumnType("int");

                    b.Property<int>("ID_BillDetail")
                        .HasColumnType("int");

                    b.Property<int>("ID_Client")
                        .HasColumnType("int");

                    b.HasKey("ID_Bill");

                    b.HasIndex("BillID_Bill");

                    b.HasIndex("ClientID_Client");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.BillDetail", b =>
                {
                    b.Property<int>("ID_BillDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BillDetail"), 1L, 1);

                    b.Property<int>("ID_Bill")
                        .HasColumnType("int");

                    b.Property<int>("ID_Client")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("price")
                        .HasColumnType("Decimal(5,2)");

                    b.Property<string>("quantity")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID_BillDetail");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Categorie", b =>
                {
                    b.Property<int>("ID_Categorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Categorie"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Varchar(60)");

                    b.Property<int?>("ProductID_Product")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ID_Categorie");

                    b.HasIndex("ProductID_Product");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Client", b =>
                {
                    b.Property<int>("ID_Client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Client"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID_Client");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Product", b =>
                {
                    b.Property<int>("ID_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Product"), 1L, 1);

                    b.Property<int?>("BillDetailID_BillDetail")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Product")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal(5,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ID_Product");

                    b.HasIndex("BillDetailID_BillDetail");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Bill", b =>
                {
                    b.HasOne("Ecommerce.Data.Models.Bill", null)
                        .WithMany("BillList")
                        .HasForeignKey("BillID_Bill");

                    b.HasOne("Ecommerce.Data.Models.Client", null)
                        .WithMany("Bills")
                        .HasForeignKey("ClientID_Client");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Categorie", b =>
                {
                    b.HasOne("Ecommerce.Data.Models.Product", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductID_Product");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Product", b =>
                {
                    b.HasOne("Ecommerce.Data.Models.BillDetail", null)
                        .WithMany("Products")
                        .HasForeignKey("BillDetailID_BillDetail");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Bill", b =>
                {
                    b.Navigation("BillList");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.BillDetail", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Client", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Ecommerce.Data.Models.Product", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
